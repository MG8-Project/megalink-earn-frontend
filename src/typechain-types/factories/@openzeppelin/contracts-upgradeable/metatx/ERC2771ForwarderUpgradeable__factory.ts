/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC2771ForwarderUpgradeable,
  ERC2771ForwarderUpgradeableInterface,
} from "../../../../@openzeppelin/contracts-upgradeable/metatx/ERC2771ForwarderUpgradeable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "deadline",
        type: "uint48",
      },
    ],
    name: "ERC2771ForwarderExpiredRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "ERC2771ForwarderInvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
    ],
    name: "ERC2771ForwarderMismatchedValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "ERC2771UntrustfulTarget",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "ExecutedForwardRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771ForwarderUpgradeable.ForwardRequestData",
        name: "request",
        type: "tuple",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771ForwarderUpgradeable.ForwardRequestData[]",
        name: "requests",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "refundReceiver",
        type: "address",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771ForwarderUpgradeable.ForwardRequestData",
        name: "request",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611099806100206000396000f3fe60806040526004361061004a5760003560e01c806319d8d38c1461004f5780637ecebe001461008457806384b0196e146100e7578063ccf96b4a1461010f578063df905caf14610124575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610cc4565b610137565b60405190151581526020015b60405180910390f35b34801561009057600080fd5b506100d961009f366004610d1b565b6001600160a01b031660009081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00602052604090205490565b60405190815260200161007b565b3480156100f357600080fd5b506100fc610169565b60405161007b9796959493929190610d7e565b61012261011d366004610e14565b61021a565b005b610122610132366004610cc4565b610324565b6000806000806101468561037f565b509250925092508280156101575750815b80156101605750805b95945050505050565b60006060808280808381600080516020611044833981519152805490915015801561019657506001810154155b6101df5760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064015b60405180910390fd5b6101e7610404565b6101ef6104c7565b60408051600080825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b6001600160a01b03811615600080805b858110156102e25786868281811061024457610244610e9a565b90506020028101906102569190610eb0565b610264906040013584610ee6565b9250600061029588888481811061027d5761027d610e9a565b905060200281019061028f9190610eb0565b86610506565b9050806102d1578787838181106102ae576102ae610e9a565b90506020028101906102c09190610eb0565b6102ce906040013584610ee6565b92505b506102db81610ef9565b905061022a565b5034821461030c576040516370647f7960e01b8152600481018390523460248201526044016101d6565b801561031c5761031c848261072d565b505050505050565b8060400135341461035457604080516370647f7960e01b81529082013560048201523460248201526044016101d6565b61035f816001610506565b61037c57604051630a12f52160e11b815260040160405180910390fd5b50565b600080600080600080610391876107c9565b90925090506103ae6103a96040890160208a01610d1b565b61093e565b426103bf60a08a0160808b01610f12565b65ffffffffffff1610158380156103f357506103de60208a018a610d1b565b6001600160a01b0316836001600160a01b0316145b919750955093509150509193509193565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10280546060916000805160206110448339815191529161044390610f3a565b80601f016020809104026020016040519081016040528092919081815260200182805461046f90610f3a565b80156104bc5780601f10610491576101008083540402835291602001916104bc565b820191906000526020600020905b81548152906001019060200180831161049f57829003601f168201915b505050505091505090565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10380546060916000805160206110448339815191529161044390610f3a565b60008060008060006105178761037f565b9350935093509350851561060257836105655761053a6040880160208901610d1b565b60405163d2650cd160e01b81526001600160a01b0390911660048201523060248201526044016101d6565b8261059e5761057a60a0880160808901610f12565b604051634a777ac560e11b815265ffffffffffff90911660048201526024016101d6565b81610602576105c8604051806040016040528060048152602001634845524560e01b8152506109bb565b806105d66020890189610d1b565b604051636422d02b60e11b81526001600160a01b039283166004820152911660248201526044016101d6565b83801561060c5750815b80156106155750825b15610723576001600160a01b03811660009081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526040812080546001810190915590506060880135600061067360408b0160208c01610d1b565b905060408a0135600061068960a08d018d610f74565b61069660208f018f610d1b565b6040516020016106a893929190610fc2565b6040516020818303038152906040529050600080600083516020850186888af19a505a90506106d7818e6109fe565b604080518781528c151560208201526001600160a01b038916917f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c910160405180910390a25050505050505b5050505092915050565b804710156107505760405163cd78605960e01b81523060048201526024016101d6565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461079d576040519150601f19603f3d011682016040523d82523d6000602084013e6107a2565b606091505b50509050806107c457604051630a12f52160e11b815260040160405180910390fd5b505050565b60008080806109186107de60c0870187610f74565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061091292507f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac9150610846905060208a018a610d1b565b61085660408b0160208c01610d1b565b60408b013560608c013561087061009f60208f018f610d1b565b8d60800160208101906108839190610f12565b8e8060a001906108939190610f74565b6040516108a1929190610fe8565b6040805191829003822060208301999099526001600160a01b0397881690820152959094166060860152608085019290925260a084015260c083015265ffffffffffff1660e08201526101008101919091526101200160405160208183030381529060405280519060200120610a1a565b90610a4d565b509092509050600081600381111561093257610932610ff8565b14959194509092505050565b604051306024820152600090819060440160408051601f19818403018152919052602080820180516001600160e01b031663572b6c0560e01b17815282519293506000928392839290918391895afa92503d915060005190508280156109a5575060208210155b80156109b15750600081115b9695505050505050565b61037c816040516024016109cf919061100e565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610a9a565b610a0d603f6060830135611021565b821015610a1657fe5b5050565b6000610a47610a27610aa3565b8360405161190160f01b8152600281019290925260228201526042902090565b92915050565b60008060008351604103610a875760208401516040850151606086015160001a610a7988828585610ab2565b955095509550505050610a93565b50508151600091506002905b9250925092565b61037c81610b81565b6000610aad610ba2565b905090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610aed5750600091506003905082610b77565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610b41573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610b6d57506000925060019150829050610b77565b9250600091508190505b9450945094915050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610bcd610c16565b610bd5610c80565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600060008051602061104483398151915281610c30610404565b805190915015610c4857805160209091012092915050565b81548015610c57579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b600060008051602061104483398151915281610c9a6104c7565b805190915015610cb257805160209091012092915050565b60018201548015610c57579392505050565b600060208284031215610cd657600080fd5b813567ffffffffffffffff811115610ced57600080fd5b820160e08185031215610cff57600080fd5b9392505050565b6001600160a01b038116811461037c57600080fd5b600060208284031215610d2d57600080fd5b8135610cff81610d06565b6000815180845260005b81811015610d5e57602081850181015186830182015201610d42565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e081840152610d9e60e084018a610d38565b8381036040850152610db0818a610d38565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015610e0257835183529284019291840191600101610de6565b50909c9b505050505050505050505050565b600080600060408486031215610e2957600080fd5b833567ffffffffffffffff80821115610e4157600080fd5b818601915086601f830112610e5557600080fd5b813581811115610e6457600080fd5b8760208260051b8501011115610e7957600080fd5b60209283019550935050840135610e8f81610d06565b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000823560de19833603018112610ec657600080fd5b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610a4757610a47610ed0565b600060018201610f0b57610f0b610ed0565b5060010190565b600060208284031215610f2457600080fd5b813565ffffffffffff81168114610cff57600080fd5b600181811c90821680610f4e57607f821691505b602082108103610f6e57634e487b7160e01b600052602260045260246000fd5b50919050565b6000808335601e19843603018112610f8b57600080fd5b83018035915067ffffffffffffffff821115610fa657600080fd5b602001915036819003821315610fbb57600080fd5b9250929050565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fd5b602081526000610cff6020830184610d38565b60008261103e57634e487b7160e01b600052601260045260246000fd5b50049056fea16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100a26469706673582212208ea8572b34fbeefe024d5af526135cce77aef849f43b8ad4542a544bf987061064736f6c63430008140033";

type ERC2771ForwarderUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC2771ForwarderUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC2771ForwarderUpgradeable__factory extends ContractFactory {
  constructor(...args: ERC2771ForwarderUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC2771ForwarderUpgradeable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ERC2771ForwarderUpgradeable__factory {
    return super.connect(runner) as ERC2771ForwarderUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC2771ForwarderUpgradeableInterface {
    return new Interface(_abi) as ERC2771ForwarderUpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC2771ForwarderUpgradeable {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ERC2771ForwarderUpgradeable;
  }
}
