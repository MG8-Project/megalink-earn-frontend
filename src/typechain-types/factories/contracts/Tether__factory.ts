/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Tether, TetherInterface } from "../../contracts/Tether";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b60805161147b6100fd600039600081816107ec015281816108150152610956015261147b6000f3fe6080604052600436106100f35760003560e01c8063715018a61161008a578063ad3cb1cc11610059578063ad3cb1cc146102cb578063c4d66de8146102fc578063dd62ed3e1461031c578063f2fde38b1461033c57600080fd5b8063715018a61461023a5780638da5cb5b1461024f57806395d89b4114610296578063a9059cbb146102ab57600080fd5b8063313ce567116100c6578063313ce567146101b15780634f1ef286146101cd57806352d1902d146101e257806370a08231146101f757600080fd5b806306fdde03146100f8578063095ea7b31461012357806318160ddd1461015357806323b872dd14610191575b600080fd5b34801561010457600080fd5b5061010d61035c565b60405161011a9190610f82565b60405180910390f35b34801561012f57600080fd5b5061014361013e366004610fd1565b61041f565b604051901515815260200161011a565b34801561015f57600080fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b60405190815260200161011a565b34801561019d57600080fd5b506101436101ac366004610ffb565b610439565b3480156101bd57600080fd5b506040516012815260200161011a565b6101e06101db36600461104d565b61045f565b005b3480156101ee57600080fd5b5061018361047e565b34801561020357600080fd5b5061018361021236600461110f565b6001600160a01b03166000908152600080516020611406833981519152602052604090205490565b34801561024657600080fd5b506101e061049b565b34801561025b57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b03909116815260200161011a565b3480156102a257600080fd5b5061010d6104af565b3480156102b757600080fd5b506101436102c6366004610fd1565b6104ee565b3480156102d757600080fd5b5061010d604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561030857600080fd5b506101e061031736600461110f565b6104fc565b34801561032857600080fd5b5061018361033736600461112a565b61067d565b34801561034857600080fd5b506101e061035736600461110f565b6106c7565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060916000805160206114068339815191529161039b9061115d565b80601f01602080910402602001604051908101604052809291908181526020018280546103c79061115d565b80156104145780601f106103e957610100808354040283529160200191610414565b820191906000526020600020905b8154815290600101906020018083116103f757829003601f168201915b505050505091505090565b60003361042d81858561070a565b60019150505b92915050565b60003361044785828561071c565b610452858585610782565b60019150505b9392505050565b6104676107e1565b61047082610886565b61047a828261088e565b5050565b600061048861094b565b5060008051602061142683398151915290565b6104a3610994565b6104ad60006109ef565b565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060916000805160206114068339815191529161039b9061115d565b60003361042d818585610782565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156105425750825b905060008267ffffffffffffffff16600114801561055f5750303b155b90508115801561056d575080155b1561058b5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156105b557845460ff60401b1916600160401b1785555b6105f9604051806040016040528060068152602001652a32ba3432b960d11b815250604051806040016040528060048152602001631554d11560e21b815250610a60565b61060286610a72565b61060a610a83565b61062f3361061a6012600a611291565b61062a90655af3107a40006112a0565b610a8b565b831561067557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b6106cf610994565b6001600160a01b0381166106fe57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610707816109ef565b50565b6107178383836001610ac1565b505050565b6000610728848461067d565b9050600019811461077c578181101561076d57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016106f5565b61077c84848484036000610ac1565b50505050565b6001600160a01b0383166107ac57604051634b637e8f60e11b8152600060048201526024016106f5565b6001600160a01b0382166107d65760405163ec442f0560e01b8152600060048201526024016106f5565b610717838383610ba9565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061086857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661085c600080516020611426833981519152546001600160a01b031690565b6001600160a01b031614155b156104ad5760405163703e46dd60e11b815260040160405180910390fd5b610707610994565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156108e8575060408051601f3d908101601f191682019092526108e5918101906112b7565b60015b61091057604051634c9c8ce360e01b81526001600160a01b03831660048201526024016106f5565b600080516020611426833981519152811461094157604051632a87526960e21b8152600481018290526024016106f5565b6107178383610ce7565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104ad5760405163703e46dd60e11b815260040160405180910390fd5b336109c67f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146104ad5760405163118cdaa760e01b81523360048201526024016106f5565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b610a68610d3d565b61047a8282610d86565b610a7a610d3d565b61070781610dd7565b6104ad610d3d565b6001600160a01b038216610ab55760405163ec442f0560e01b8152600060048201526024016106f5565b61047a60008383610ba9565b6000805160206114068339815191526001600160a01b038516610afa5760405163e602df0560e01b8152600060048201526024016106f5565b6001600160a01b038416610b2457604051634a1406b160e11b8152600060048201526024016106f5565b6001600160a01b03808616600090815260018301602090815260408083209388168352929052208390558115610ba257836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610b9991815260200190565b60405180910390a35b5050505050565b6000805160206114068339815191526001600160a01b038416610be55781816002016000828254610bda91906112d0565b90915550610c579050565b6001600160a01b03841660009081526020829052604090205482811015610c385760405163391434e360e21b81526001600160a01b038616600482015260248101829052604481018490526064016106f5565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b038316610c75576002810180548390039055610c94565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cd991815260200190565b60405180910390a350505050565b610cf082610ddf565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115610d35576107178282610e44565b61047a610eba565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166104ad57604051631afcd79f60e31b815260040160405180910390fd5b610d8e610d3d565b6000805160206114068339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03610dc88482611329565b506004810161077c8382611329565b6106cf610d3d565b806001600160a01b03163b600003610e1557604051634c9c8ce360e01b81526001600160a01b03821660048201526024016106f5565b60008051602061142683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051610e6191906113e9565b600060405180830381855af49150503d8060008114610e9c576040519150601f19603f3d011682016040523d82523d6000602084013e610ea1565b606091505b5091509150610eb1858383610ed9565b95945050505050565b34156104ad5760405163b398979f60e01b815260040160405180910390fd5b606082610eee57610ee982610f35565b610458565b8151158015610f0557506001600160a01b0384163b155b15610f2e57604051639996b31560e01b81526001600160a01b03851660048201526024016106f5565b5080610458565b805115610f455780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60005b83811015610f79578181015183820152602001610f61565b50506000910152565b6020815260008251806020840152610fa1816040850160208701610f5e565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610fcc57600080fd5b919050565b60008060408385031215610fe457600080fd5b610fed83610fb5565b946020939093013593505050565b60008060006060848603121561101057600080fd5b61101984610fb5565b925061102760208501610fb5565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561106057600080fd5b61106983610fb5565b9150602083013567ffffffffffffffff8082111561108657600080fd5b818501915085601f83011261109a57600080fd5b8135818111156110ac576110ac611037565b604051601f8201601f19908116603f011681019083821181831017156110d4576110d4611037565b816040528281528860208487010111156110ed57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561112157600080fd5b61045882610fb5565b6000806040838503121561113d57600080fd5b61114683610fb5565b915061115460208401610fb5565b90509250929050565b600181811c9082168061117157607f821691505b60208210810361119157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156111e85781600019048211156111ce576111ce611197565b808516156111db57918102915b93841c93908002906111b2565b509250929050565b6000826111ff57506001610433565b8161120c57506000610433565b8160018114611222576002811461122c57611248565b6001915050610433565b60ff84111561123d5761123d611197565b50506001821b610433565b5060208310610133831016604e8410600b841016171561126b575081810a610433565b61127583836111ad565b806000190482111561128957611289611197565b029392505050565b600061045860ff8416836111f0565b808202811582820484141761043357610433611197565b6000602082840312156112c957600080fd5b5051919050565b8082018082111561043357610433611197565b601f82111561071757600081815260208120601f850160051c8101602086101561130a5750805b601f850160051c820191505b8181101561067557828155600101611316565b815167ffffffffffffffff81111561134357611343611037565b61135781611351845461115d565b846112e3565b602080601f83116001811461138c57600084156113745750858301515b600019600386901b1c1916600185901b178555610675565b600085815260208120601f198616915b828110156113bb5788860151825594840194600190910190840161139c565b50858210156113d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082516113fb818460208701610f5e565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220583ecc0bec0c0cc3eaf22c7db4e9c3fec9cfc1136059e362f5f6270d3f66444e64736f6c63430008140033";

type TetherConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TetherConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tether__factory extends ContractFactory {
  constructor(...args: TetherConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Tether & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Tether__factory {
    return super.connect(runner) as Tether__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TetherInterface {
    return new Interface(_abi) as TetherInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Tether {
    return new Contract(address, _abi, runner) as unknown as Tether;
  }
}
