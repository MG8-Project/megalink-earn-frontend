/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Vault, VaultInterface } from "../../contracts/Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ratio",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "mg8",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimBNB",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimMG8",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MG8",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "claimBNB",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "claimMG8",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "claimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "_bnbAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_mg8Amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "convertPointToMG8",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseBNB",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseMG8",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseBNB",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseMG8",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ratio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ratio",
        type: "uint256",
      },
    ],
    name: "setRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f63380380610f6383398101604081905261002f91610114565b6000805460ff19169055816001600160a01b03811661006857604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100718161009f565b5060018055600380546001600160a01b0319166001600160a01b039290921691909117905550600455610150565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b80516001600160a01b038116811461010f57600080fd5b919050565b60008060006060848603121561012957600080fd5b83519250610139602085016100f8565b9150610147604085016100f8565b90509250925092565b610e048061015f6000396000f3fe6080604052600436106101185760003560e01c80637d88eb28116100a0578063b2237ba311610064578063b2237ba3146102db578063d2144680146102fb578063d60693f11461031b578063f13969311461033b578063f2fde38b1461035b57600080fd5b80637d88eb281461021a57806382190feb1461023a5780638456cb591461025a578063898850491461026f5780638da5cb5b146102a457600080fd5b8063436596c4116100e7578063436596c4146101975780635c975abb146101ac578063715018a6146101cf57806371ca337d146101e45780637376f738146101fa57600080fd5b80630e5c1d0a1461012457806325cc6ebc146101395780633644e515146101595780633f4ba83a1461018257600080fd5b3661011f57005b600080fd5b610137610132366004610c2a565b61037b565b005b34801561014557600080fd5b50610137610154366004610c2a565b61050a565b34801561016557600080fd5b5061016f60025481565b6040519081526020015b60405180910390f35b34801561018e57600080fd5b506101376106f6565b3480156101a357600080fd5b50610137610708565b3480156101b857600080fd5b5060005460ff166040519015158152602001610179565b3480156101db57600080fd5b5061013761086b565b3480156101f057600080fd5b5061016f60045481565b34801561020657600080fd5b50610137610215366004610c5f565b61087d565b34801561022657600080fd5b5061016f610235366004610c2a565b610906565b34801561024657600080fd5b50610137610255366004610c5f565b610927565b34801561026657600080fd5b5061013761099d565b34801561027b57600080fd5b5061028f61028a366004610c89565b6109ad565b60408051928352602083019190915201610179565b3480156102b057600080fd5b5060005461010090046001600160a01b03165b6040516001600160a01b039091168152602001610179565b3480156102e757600080fd5b506101376102f6366004610c2a565b6109e6565b34801561030757600080fd5b50610137610316366004610c5f565b6109f3565b34801561032757600080fd5b506003546102c3906001600160a01b031681565b34801561034757600080fd5b50610137610356366004610c5f565b610a2b565b34801561036757600080fd5b50610137610376366004610c89565b610a63565b610383610a9e565b61038b610ac8565b336000818152600660205260409020548211156103c35760405162461bcd60e51b81526004016103ba90610cab565b60405180910390fd5b30318211156104145760405162461bcd60e51b815260206004820152601b60248201527f5661756c743a20496e73756666696369656e742062616c616e6365000000000060448201526064016103ba565b6001600160a01b0381166000908152600660205260408120805484929061043c908490610d05565b90915550506007805460018101825560009182527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180546001600160a01b0319166001600160a01b03841690811790915560405190916108fc851502918591818181858888f193505050501580156104b9573d6000803e3d6000fd5b50806001600160a01b03167f3eca85558ef8a2bac8703078fc41e26177fe35dfbf07be2b934d7913520a977b836040516104f591815260200190565b60405180910390a25061050760018055565b50565b610512610a9e565b61051a610ac8565b336000818152600560205260409020548211156105495760405162461bcd60e51b81526004016103ba90610cab565b6003546040516370a0823160e01b815230600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa158015610591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b59190610d18565b10156106035760405162461bcd60e51b815260206004820152601b60248201527f5661756c743a20496e73756666696369656e742062616c616e6365000000000060448201526064016103ba565b6001600160a01b0381166000908152600560205260408120805484929061062b908490610d05565b90915550506003546001600160a01b031663a9059cbb8261064b85610906565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ba9190610d31565b50806001600160a01b03167f625f3db33efc1019ab03a2af26f49b9dbf86d504dfbd30d1471dd56f25cdca7a836040516104f591815260200190565b6106fe610aec565b610706610b1f565b565b610710610aec565b610718610a9e565b60005b6007548110156108615760006007828154811061073a5761073a610d53565b60009182526020808320909101546001600160a01b0316808352600682526040808420546005909352909220549192509081156107b7576001600160a01b0383166000818152600660205260408082208290555184156108fc0291859190818181858888f193505050501580156107b5573d6000803e3d6000fd5b505b801561084b576001600160a01b0383811660008181526005602052604080822091909155600354905163a9059cbb60e01b81526004810192909252602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108499190610d31565b505b505050808061085990610d69565b91505061071b565b5061070660018055565b610873610aec565b6107066000610b71565b610885610aec565b61088d610a9e565b6001600160a01b0382166000908152600660205260409020548111156108cb576001600160a01b0382166000908152600660205260408120556108f9565b6001600160a01b038216600090815260066020526040812080548392906108f3908490610d05565b90915550505b61090260018055565b5050565b600060646004546109179190610d82565b6109219083610da4565b92915050565b61092f610aec565b610937610a9e565b6001600160a01b038216600090815260056020526040902054811115610975576001600160a01b0382166000908152600560205260408120556108f9565b6001600160a01b038216600090815260056020526040812080548392906108f3908490610d05565b6109a5610aec565b610706610bca565b6001600160a01b03811660009081526006602090815260408083205460059092528220548291906109dd90610906565b91509150915091565b6109ee610aec565b600455565b6109fb610aec565b610a03610a9e565b6001600160a01b038216600090815260066020526040812080548392906108f3908490610dbb565b610a33610aec565b610a3b610a9e565b6001600160a01b038216600090815260056020526040812080548392906108f3908490610dbb565b610a6b610aec565b6001600160a01b038116610a9557604051631e4fbdf760e01b8152600060048201526024016103ba565b61050781610b71565b600260015403610ac157604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b60005460ff16156107065760405163d93c066560e01b815260040160405180910390fd5b6000546001600160a01b036101009091041633146107065760405163118cdaa760e01b81523360048201526024016103ba565b610b27610c07565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b610bd2610ac8565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b543390565b60005460ff1661070657604051638dfc202b60e01b815260040160405180910390fd5b600060208284031215610c3c57600080fd5b5035919050565b80356001600160a01b0381168114610c5a57600080fd5b919050565b60008060408385031215610c7257600080fd5b610c7b83610c43565b946020939093013593505050565b600060208284031215610c9b57600080fd5b610ca482610c43565b9392505050565b60208082526024908201527f5661756c743a20496e73756666696369656e7420636c61696d61626c6520616d6040820152631bdd5b9d60e21b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561092157610921610cef565b600060208284031215610d2a57600080fd5b5051919050565b600060208284031215610d4357600080fd5b81518015158114610ca457600080fd5b634e487b7160e01b600052603260045260246000fd5b600060018201610d7b57610d7b610cef565b5060010190565b600082610d9f57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761092157610921610cef565b8082018082111561092157610921610cef56fea264697066735822122005b87c152f35c3af3f5e353265b52e0bf7a5fe7a4b5012379a29636cef7e84c464736f6c63430008140033";

type VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vault__factory extends ContractFactory {
  constructor(...args: VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _ratio: BigNumberish,
    initialOwner: AddressLike,
    mg8: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _ratio,
      initialOwner,
      mg8,
      overrides || {}
    );
  }
  override deploy(
    _ratio: BigNumberish,
    initialOwner: AddressLike,
    mg8: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_ratio, initialOwner, mg8, overrides || {}) as Promise<
      Vault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Vault__factory {
    return super.connect(runner) as Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultInterface {
    return new Interface(_abi) as VaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Vault {
    return new Contract(address, _abi, runner) as unknown as Vault;
  }
}
