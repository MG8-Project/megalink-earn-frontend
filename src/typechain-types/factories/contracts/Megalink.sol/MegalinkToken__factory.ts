/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MegalinkToken,
  MegalinkTokenInterface,
} from "../../../contracts/Megalink.sol/MegalinkToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "request",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405260086080908152674d6567616c696e6b60c01b60a052600790620000299082620003d7565b5060408051808201909152600381526209a8e760eb1b6020820152600890620000539082620003d7565b503480156200006157600080fd5b5060078054620000719062000349565b80601f01602080910402602001604051908101604052809291908181526020018280546200009f9062000349565b8015620000f05780601f10620000c457610100808354040283529160200191620000f0565b820191906000526020600020905b815481529060010190602001808311620000d257829003601f168201915b505050505060088054620001049062000349565b80601f0160208091040260200160405190810160405280929190818152602001828054620001329062000349565b8015620001835780601f10620001575761010080835404028352916020019162000183565b820191906000526020600020905b8154815290600101906020018083116200016557829003601f168201915b50505050508160039081620001999190620003d7565b506004620001a88282620003d7565b505050620001c5620001bf620001f460201b60201c565b620001f8565b620001ee33620001d86012600a620005b8565b620001e890633b9aca00620005d0565b62000216565b62000600565b3390565b600680546001600160a01b03191690556200021381620002dc565b50565b6001600160a01b038216620002715760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620002859190620005ea565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200035e57607f821691505b6020821081036200037f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200032e57600081815260208120601f850160051c81016020861015620003ae5750805b601f850160051c820191505b81811015620003cf57828155600101620003ba565b505050505050565b81516001600160401b03811115620003f357620003f362000333565b6200040b8162000404845462000349565b8462000385565b602080601f8311600181146200044357600084156200042a5750858301515b600019600386901b1c1916600185901b178555620003cf565b600085815260208120601f198616915b82811015620004745788860151825594840194600190910190840162000453565b5085821015620004935787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620004fa578160001904821115620004de57620004de620004a3565b80851615620004ec57918102915b93841c9390800290620004be565b509250929050565b6000826200051357506001620005b2565b816200052257506000620005b2565b81600181146200053b5760028114620005465762000566565b6001915050620005b2565b60ff8411156200055a576200055a620004a3565b50506001821b620005b2565b5060208310610133831016604e8410600b84101617156200058b575081810a620005b2565b620005978383620004b9565b8060001904821115620005ae57620005ae620004a3565b0290505b92915050565b6000620005c960ff84168362000502565b9392505050565b8082028115828204841417620005b257620005b2620004a3565b80820180821115620005b257620005b2620004a3565b610ca680620006106000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806379ba5097116100a2578063a457c2d711610071578063a457c2d71461022a578063a9059cbb1461023d578063dd62ed3e14610250578063e30c397814610263578063f2fde38b1461027457600080fd5b806379ba5097146101e9578063893d20e8146101f15780638da5cb5b1461021157806395d89b411461022257600080fd5b8063313ce567116100e9578063313ce56714610181578063395093511461019057806342966c68146101a357806370a08231146101b6578063715018a6146101df57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b610123610287565b6040516101309190610adc565b60405180910390f35b61014c610147366004610b41565b610319565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610b6b565b610333565b60405160128152602001610130565b61014c61019e366004610b41565b610357565b61014c6101b1366004610ba7565b610379565b6101606101c4366004610bc0565b6001600160a01b031660009081526020819052604090205490565b6101e76103cf565b005b6101e76103e3565b6101f9610462565b6040516001600160a01b039091168152602001610130565b6005546001600160a01b03166101f9565b61012361047b565b61014c610238366004610b41565b61048a565b61014c61024b366004610b41565b610505565b61016061025e366004610be2565b610513565b6006546001600160a01b03166101f9565b6101e7610282366004610bc0565b61053e565b60606003805461029690610c15565b80601f01602080910402602001604051908101604052809291908181526020018280546102c290610c15565b801561030f5780601f106102e45761010080835404028352916020019161030f565b820191906000526020600020905b8154815290600101906020018083116102f257829003601f168201915b5050505050905090565b6000336103278185856105af565b60019150505b92915050565b6000336103418582856106d4565b61034c85858561074e565b506001949350505050565b60003361032781858561036a8383610513565b6103749190610c4f565b6105af565b60006103836108f2565b61038d338361094c565b60408051338152602081018490527f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7910160405180910390a15060015b919050565b6103d76108f2565b6103e16000610a76565b565b60065433906001600160a01b031681146104565760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b61045f81610a76565b50565b60006104766005546001600160a01b031690565b905090565b60606004805461029690610c15565b600033816104988286610513565b9050838110156104f85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161044d565b61034c82868684036105af565b60003361032781858561074e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105466108f2565b600680546001600160a01b0383166001600160a01b031990911681179091556105776005546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6001600160a01b0383166106115760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161044d565b6001600160a01b0382166106725760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161044d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006106e08484610513565b90506000198114610748578181101561073b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161044d565b61074884848484036105af565b50505050565b6001600160a01b0383166107b25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161044d565b6001600160a01b0382166108145760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161044d565b6001600160a01b0383166000908152602081905260409020548181101561088c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161044d565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610748565b6005546001600160a01b031633146103e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161044d565b6001600160a01b0382166109ac5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161044d565b6001600160a01b03821660009081526020819052604090205481811015610a205760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161044d565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016106c7565b600680546001600160a01b031916905561045f81600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610b0957858101830151858201604001528201610aed565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146103ca57600080fd5b60008060408385031215610b5457600080fd5b610b5d83610b2a565b946020939093013593505050565b600080600060608486031215610b8057600080fd5b610b8984610b2a565b9250610b9760208501610b2a565b9150604084013590509250925092565b600060208284031215610bb957600080fd5b5035919050565b600060208284031215610bd257600080fd5b610bdb82610b2a565b9392505050565b60008060408385031215610bf557600080fd5b610bfe83610b2a565b9150610c0c60208401610b2a565b90509250929050565b600181811c90821680610c2957607f821691505b602082108103610c4957634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561032d57634e487b7160e01b600052601160045260246000fdfea2646970667358221220d212dcf0581b4f7f99509f1974b7ecc9be0be7fbf101439deb7278047f216ff464736f6c63430008140033";

type MegalinkTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MegalinkTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MegalinkToken__factory extends ContractFactory {
  constructor(...args: MegalinkTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MegalinkToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MegalinkToken__factory {
    return super.connect(runner) as MegalinkToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MegalinkTokenInterface {
    return new Interface(_abi) as MegalinkTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MegalinkToken {
    return new Contract(address, _abi, runner) as unknown as MegalinkToken;
  }
}
